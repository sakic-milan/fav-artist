{"version":3,"sources":["components/styles/Container.styled.js","components/styles/Global.js","components/styles/theme.styled.js","components/styles/Header.styled.js","utils/constants.ts","components/styles/Flex.styled.js","components/shared/Header/index.tsx","components/shared/Footer/index.tsx","components/shared/LayoutMain/index.tsx","components/styles/Button.styled.js","utils/api.ts","assets/images/placeholder.png","components/Album/AlbumItem.tsx","components/shared/BackgroundWrapper/index.tsx","components/shared/GridItem/index.tsx","pages/Home/index.tsx","utils/sort.ts","store/reducers/preferencesReducer.ts","store/index.ts","components/styles/Track.styled.js","components/Track/index.tsx","pages/Liked/index.tsx","pages/SearchTracks/index.tsx","pages/SingleAlbumView/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","div","GlobalStyles","createGlobalStyle","theme","colors","body","header","white","footer","lastfmRed","gridBg","mobile","StyledHeader","Logo","Link","Navigation","nav","NavigationItem","FAVORITE_ARTIST","process","Flex","Header","to","StyledFooter","Footer","LayoutMain","children","Global","Button","button","bg","color","BASE_URI","DEFAULT_HEADERS","intercept","data","then","response","ok","json","Promise","resolve","reject","get","url","headers","fetch","method","Title","h3","Views","p","StyledLink","Content","AlbumItem","album","src","image","placeholderImg","alt","name","playcount","StyledDiv","BackgroundWrapper","Wrapper","GridItem","Home","useState","albums","setAlbums","setIsLoading","sortByName","setSortByName","getAlbums","res","topalbums","catch","alert","finally","useEffect","sortedAlbums","sort","a","b","localeCompare","sortAlbumsByName","Heading","buttonText","onClick","type","map","preferencesSlice","createSlice","initialState","likedTracks","reducers","likeTrack","state","action","find","track","payload","dislikeTrack","filter","actions","selectLikedTracks","preferences","preferencesReducer","reducer","rootReducer","combineReducers","persistConfig","key","version","storage","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","useAppSelector","useSelector","TrackName","SingleTrack","dispatch","useDispatch","isTrackLiked","t","selectIfTrackIsLiked","console","log","href","target","LogoHeading","h1","BlockWrapper","Liked","SearchTracks","search","tracks","setTracks","isLoading","getTracks","results","trackmatches","e","Input","input","SingleAlbumView","useParams","getSingleAlbumData","LogoHeadingSmall","App","path","element","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.020ef351.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 1000px;\r\n\tmax-width: 100%;\r\n\tpadding: 0 12px;\r\n\tmargin: 0 auto;\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.colors.body};\r\n    color: hsl(192, 100%, 9%);\r\n    font-family: 'Poppins', sans-serif;\r\n    font-size: 1.15em;\r\n    margin: 0;\r\n  }\r\n\r\n  p {\r\n    opacity: 0.6;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n}\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","export const theme = {\r\n\tcolors: {\r\n\t\theader: '#7b29d9',\r\n\t\twhite: '#fff',\r\n\t\tbody: '#fff',\r\n\t\tfooter: '#7b29d9',\r\n\t\tlastfmRed: '#D92323',\r\n\t\tgridBg: '#fff',\r\n\t},\r\n\tmobile: '768px',\r\n};\r\n","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledHeader = styled.header`\r\n\tposition: sticky;\r\n\tz-index: 99999;\r\n\ttop: 0;\r\n\tmargin: 0 auto;\r\n\tbackground-color: ${({ theme }) => theme.colors.header};\r\n\tcolor: ${({ theme }) => theme.colors.white};\r\n\tpadding: 12px 0; ;\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n\tfont-size: 24px;\r\n\tfont-weight: 500;\r\n\ttext-decoration: none;\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\theight: 40px;\r\n`;\r\n\r\nexport const NavigationItem = styled(Link)`\r\n\ttext-decoration: none;\r\n\talign-items: center;\r\n\tmargin: 0 20px;\r\n\tfont-weight: 500;\r\n\tcursor: pointer;\r\n`;\r\n","export const FAVORITE_ARTIST = process.env.REACT_APP_FAVORITE_ARTIST;\r\n","import styled from 'styled-components';\r\n\r\nexport const Flex = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Container } from '../../styles/Container.styled';\r\nimport {\r\n\tStyledHeader,\r\n\tLogo,\r\n\tNavigation,\r\n\tNavigationItem,\r\n} from '../../styles/Header.styled';\r\nimport { FAVORITE_ARTIST } from '../../../utils/constants';\r\nimport { Flex } from '../../styles/Flex.styled';\r\n\r\nconst Header = () => (\r\n\t<StyledHeader>\r\n\t\t<Container>\r\n\t\t\t<Flex>\r\n\t\t\t\t<Logo to={`/`}>{FAVORITE_ARTIST} fans app</Logo>\r\n\t\t\t\t<Navigation>\r\n\t\t\t\t\t<NavigationItem to=\"/\">Home</NavigationItem>\r\n\t\t\t\t\t<NavigationItem to=\"/search\">Search</NavigationItem>\r\n\t\t\t\t\t<NavigationItem to=\"/liked\">Like</NavigationItem>\r\n\t\t\t\t</Navigation>\r\n\t\t\t</Flex>\r\n\t\t</Container>\r\n\t</StyledHeader>\r\n);\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\nimport { Container } from '../../styles/Container.styled';\r\nimport { FAVORITE_ARTIST } from '../../../utils/constants';\r\n\r\nconst StyledFooter = styled.footer`\r\n\tmargin-top: 24px;\r\n\tbackground-color: ${({ theme }) => theme.colors.header};\r\n\tcolor: ${({ theme }) => theme.colors.white};\r\n\tpadding: 6px 0;\r\n`;\r\n\r\nconst Footer = () => (\r\n\t<StyledFooter>\r\n\t\t<Container>{FAVORITE_ARTIST} fans app</Container>\r\n\t</StyledFooter>\r\n);\r\n\r\nexport default Footer;\r\n","import { FC, ReactNode } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { Container } from '../../styles/Container.styled';\r\nimport GlobalStyles from '../../styles/Global';\r\n\r\nimport { theme } from '../../styles/theme.styled';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\n\r\nconst LayoutMain: FC<{ children: ReactNode }> = ({ children }) => (\r\n\t<ThemeProvider theme={theme}>\r\n\t\t<GlobalStyles />\r\n\t\t<Header />\r\n\t\t<Container>{children}</Container>\r\n\t\t<Footer />\r\n\t</ThemeProvider>\r\n);\r\n\r\nexport default LayoutMain;\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n\tborder-radius: 60px;\r\n\tborder: none;\r\n\tbox-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);\r\n\tcursor: pointer;\r\n\tfont-size: 16px;\r\n\tfont-weight: 600;\r\n\tpadding: 12px 30px;\r\n\tbackground-color: ${({ bg }) => bg || '#fff'};\r\n\tcolor: ${({ color }) => color || '#333'};\r\n\r\n\t&:hover {\r\n\t\topacity: 0.9;\r\n\t\ttransform: scale(0.98);\r\n\t}\r\n`;\r\n","const BASE_URI = process.env.REACT_APP_BASE_URI;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst DEFAULT_HEADERS = {\n\t'Content-Type': 'application/json',\n};\n\nconst interceptor = <T>(response: any): Promise<T> => {\n\tif (response.ok) {\n\t\treturn response.json().then((data: T) => Promise.resolve(data));\n\t}\n\treturn response.json().then((data: any) => Promise.reject(data));\n};\n\nconst intercept = <T>(data: Promise<any>) =>\n\tdata.then(data => interceptor<T>(data));\n\nexport const post = <T = any>(\n\turl: string,\n\tbody: any,\n\theaders?: { [k: string]: string }\n) =>\n\tintercept<T>(\n\t\tfetch(`${BASE_URI}/${url}`, {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(body),\n\t\t\theaders: {\n\t\t\t\t...DEFAULT_HEADERS,\n\t\t\t\t...headers,\n\t\t\t},\n\t\t})\n\t);\n\nexport const get = <T = any>(url: string, headers?: { [k: string]: string }) =>\n\tintercept<T>(\n\t\tfetch(`${BASE_URI}/2.0/?api_key=${API_KEY}&${url}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t...DEFAULT_HEADERS,\n\t\t\t\t...headers,\n\t\t\t},\n\t\t})\n\t);\n\nexport const getParsedParams = (params: { [k: string]: any }) =>\n\tnew URLSearchParams(params).toString();\n","export default __webpack_public_path__ + \"static/media/placeholder.ef50f4c1.png\";","import { Link } from 'react-router-dom';\r\nimport { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Album } from '../../models/models';\r\nimport placeholderImg from '../../assets/images/placeholder.png';\r\n\r\ntype AlbumItemProps = {\r\n\talbum: Album;\r\n};\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tbackground-color: white;\r\n\twidth: 100%;\r\n\tbox-shadow: 0px 0px 7px rgba(0, 0, 0, 0.1), 0px 2px 3px rgba(0, 0, 0, 0.1);\r\n\tborder-radius: 10px;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n\tmargin-top: 10px 0;\r\n`;\r\n\r\nconst Views = styled.p`\r\n\tmargin: 10px 0;\r\n\tfont-size: 15px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n\tmargin-bottom: 10px;\r\n\tcursor: pointer;\r\n\tcolor: ${({ theme }) => theme.colors.header};\r\n\tfont-size: 15px;\r\n\tcursor: pointer;\r\n`;\r\n\r\nconst Content = styled.div`\r\n\tpadding: 10px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tflex: 1;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst AlbumItem: FC<AlbumItemProps> = ({ album }) => (\r\n\t<Container>\r\n\t\t<img\r\n\t\t\tsrc={\r\n\t\t\t\talbum?.image[2]['#text'] === ''\r\n\t\t\t\t\t? placeholderImg\r\n\t\t\t\t\t: album?.image[2]['#text']\r\n\t\t\t}\r\n\t\t\talt=\"\"\r\n\t\t/>\r\n\t\t<Content>\r\n\t\t\t<Title>{album?.name}</Title>\r\n\t\t\t<Views>Views: {album?.playcount}</Views>\r\n\t\t\t<StyledLink to={`album/${album?.name}`}>details</StyledLink>\r\n\t\t</Content>\r\n\t</Container>\r\n);\r\n\r\nexport default AlbumItem;\r\n","import { FC, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledDiv = styled.div`\r\n\tmax-width: 1200px;\r\n\tmargin: 0 auto;\r\n\toverflow-wrap: break-word;\r\n`;\r\n\r\nexport const BackgroundWrapper: FC<ReactNode> = ({ children }) => (\r\n\t<StyledDiv>{children}</StyledDiv>\r\n);\r\n\r\nexport default BackgroundWrapper;\r\n","import styled from 'styled-components';\r\nimport { FC, ReactNode } from 'react';\r\n\r\nconst Wrapper = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n\tbackground-color: ${({ theme }) => theme.colors.gridBg};\r\n\tgap: 20px;\r\n\tjustify-items: center;\r\n\tpadding: 12px 0;\r\n`;\r\n\r\nexport const GridItem: FC<ReactNode> = ({ children }) => (\r\n\t<Wrapper>{children}</Wrapper>\r\n);\r\n\r\nexport default GridItem;\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../../components/styles/Button.styled';\r\nimport { get } from '../../utils/api';\r\nimport { Album } from '../../models/models';\r\nimport { sortAlbumsByName } from '../../utils/sort';\r\nimport { FAVORITE_ARTIST } from '../../utils/constants';\r\nimport AlbumItem from '../../components/Album/AlbumItem';\r\nimport BackgroundWrapper from '../../components/shared/BackgroundWrapper';\r\nimport GridItem from '../../components/shared/GridItem';\r\n\r\nconst url = `method=artist.gettopalbums&artist=${FAVORITE_ARTIST}&format=json`;\r\n\r\nconst Home = () => {\r\n\tconst [albums, setAlbums] = useState<Album[]>();\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [sortByName, setSortByName] = useState(false);\r\n\r\n\tconst toggleSort = () => {\r\n\t\tsetSortByName(!sortByName);\r\n\t};\r\n\r\n\tconst getAlbums = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tget(url)\r\n\t\t\t.then(res => setAlbums(res.topalbums.album))\r\n\t\t\t.catch(() => alert(\"Couldn't get albums for selected artist\"))\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetAlbums();\r\n\t}, []);\r\n\r\n\tconst sortedAlbums =\r\n\t\tsortByName && albums ? sortAlbumsByName([...albums]) : albums;\r\n\r\n\tconst Heading = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row-reverse;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin: 18px 0;\r\n\t`;\r\n\r\n\tconst buttonText = `Sort by ${sortByName ? 'popularity' : 'name'}`;\r\n\r\n\treturn (\r\n\t\t<BackgroundWrapper>\r\n\t\t\t<Heading>\r\n\t\t\t\t<Button onClick={toggleSort} type=\"button\">\r\n\t\t\t\t\t{buttonText}\r\n\t\t\t\t</Button>\r\n\t\t\t</Heading>\r\n\t\t\t<GridItem>\r\n\t\t\t\t{sortedAlbums?.map(album => (\r\n\t\t\t\t\t<AlbumItem key={album.name} album={album} />\r\n\t\t\t\t))}\r\n\t\t\t</GridItem>\r\n\t\t</BackgroundWrapper>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import { Album } from '../models/models';\r\n\r\nexport const sortAlbumsByName = (albums?: Album[]) => {\r\n\tif (!albums) return [];\r\n\r\n\treturn albums.sort((a, b) => a.name.localeCompare(b.name));\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Track } from '../../models/models';\nimport type { RootState } from '../index';\n\ninterface PreferencesState {\n\tlikedTracks: Track[];\n}\n\nconst initialState: PreferencesState = {\n\tlikedTracks: [],\n};\n\nexport const preferencesSlice = createSlice({\n\tname: 'preferences',\n\tinitialState,\n\treducers: {\n\t\tlikeTrack: (state, action: PayloadAction<Track>) => {\n\t\t\tif (\n\t\t\t\tstate.likedTracks &&\n\t\t\t\tstate.likedTracks.find(track => track.name === action.payload.name)\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tstate.likedTracks = [...state.likedTracks, action.payload];\n\t\t},\n\t\tdislikeTrack: (state, action: PayloadAction<Track>) => {\n\t\t\tstate.likedTracks = [\n\t\t\t\t...state.likedTracks.filter(\n\t\t\t\t\ttrack => track.name !== action.payload.name\n\t\t\t\t),\n\t\t\t];\n\t\t},\n\t},\n});\n\nexport const { likeTrack, dislikeTrack } = preferencesSlice.actions;\n\nexport const selectLikedTracks = (state: RootState) =>\n\tstate.preferences.likedTracks;\n\nexport const selectIfTrackIsLiked = (state: RootState, track: Track) =>\n\t!!state.preferences.likedTracks.find(t => t.name === track.name);\n\nexport const preferencesReducer = preferencesSlice.reducer;\n","import storage from 'redux-persist/lib/storage';\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { preferencesReducer } from './reducers';\n\nconst rootReducer = combineReducers({\n\tpreferences: preferencesReducer,\n});\n\nconst persistConfig = {\n\tkey: 'root',\n\tversion: 1,\n\tstorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n\treducer: persistedReducer,\n\tmiddleware: getDefaultMiddleware =>\n\t\tgetDefaultMiddleware({\n\t\t\tserializableCheck: false,\n\t\t}),\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tborder: 1px solid lightblue;\r\n\tborder-radius: 60px;\r\n\tmargin: 16px 0px;\r\n\tpadding: 10px;\r\n\tpadding-left: 20px;\r\n`;\r\n\r\nexport const TrackName = styled.h3`\r\n\tfont-size: 20px;\r\n\r\n\ta {\r\n\t\tfont-size: 13px;\r\n\t\tborder: 1px solid ${({ theme }) => theme.colors.lastfmRed};\r\n\t\tbackground-color: ${({ theme }) => theme.colors.lastfmRed};\r\n\t\tpadding: 2px 10px;\r\n\t\tborder-radius: 0px 12px;\r\n\t\ttext-decoration: none;\r\n\t\tmargin-left: 4px;\r\n\t\tcursor: pointer;\r\n\t\tcolor: ${({ theme }) => theme.colors.white};\r\n\t}\r\n`;\r\n","import { FC } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../styles/Button.styled';\r\nimport { Container, TrackName } from '../styles/Track.styled';\r\nimport { Track } from '../../models/models';\r\nimport { useAppDispatch, useAppSelector } from '../../store';\r\nimport {\r\n\tdislikeTrack,\r\n\tlikeTrack,\r\n\tselectIfTrackIsLiked,\r\n} from '../../store/reducers';\r\n\r\ntype SingleTrackProps = {\r\n\ttrack: Track;\r\n};\r\n\r\nconst SingleTrack: FC<SingleTrackProps> = ({ track }) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst isTrackLiked = useAppSelector(state =>\r\n\t\tselectIfTrackIsLiked(state, track)\r\n\t);\r\n\r\n\tconst handleLikeTrack = () => {\r\n\t\tif (isTrackLiked) return;\r\n\t\tdispatch(likeTrack(track));\r\n\t};\r\n\r\n\tconst handleDislikeTrack = () => {\r\n\t\tif (!isTrackLiked) return;\r\n\t\tdispatch(dislikeTrack(track));\r\n\t};\r\n\r\n\tconsole.log('track', track);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<TrackName>\r\n\t\t\t\t{track.name}{' '}\r\n\t\t\t\t<a href={track.url} target=\"_blank\">\r\n\t\t\t\t\tLastFM\r\n\t\t\t\t</a>\r\n\t\t\t</TrackName>\r\n\r\n\t\t\t{isTrackLiked ? (\r\n\t\t\t\t<Button onClick={handleDislikeTrack} type=\"button\">\r\n\t\t\t\t\tUnlike\r\n\t\t\t\t</Button>\r\n\t\t\t) : (\r\n\t\t\t\t<Button onClick={handleLikeTrack} type=\"button\">\r\n\t\t\t\t\tLike\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default SingleTrack;\r\n","import styled from 'styled-components';\r\nimport { useAppSelector } from '../../store';\r\nimport { selectLikedTracks } from '../../store/reducers';\r\nimport SingleTrack from '../../components/Track';\r\nimport { FAVORITE_ARTIST } from '../../utils/constants';\r\nimport BackgroundWrapper from '../../components/shared/BackgroundWrapper';\r\n\r\nconst LogoHeading = styled.h1`\r\n\tfont-size: 28px;\r\n\tfont-weight: 600;\r\n\tmargin: 22px 0;\r\n`;\r\n\r\nconst BlockWrapper = styled(BackgroundWrapper)`\r\n\tdisplay: block;\r\n`;\r\n\r\nconst Liked = () => {\r\n\tconst likedTracks = useAppSelector(selectLikedTracks);\r\n\r\n\treturn (\r\n\t\t<BlockWrapper>\r\n\t\t\t<LogoHeading>Your favourite {FAVORITE_ARTIST} tracks:</LogoHeading>\r\n\t\t\t{likedTracks.map(track => (\r\n\t\t\t\t<SingleTrack key={track.name} track={track} />\r\n\t\t\t))}\r\n\t\t</BlockWrapper>\r\n\t);\r\n};\r\n\r\nexport default Liked;\r\n","import { useState, ChangeEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Track } from '../../models/models';\r\nimport SingleTrack from '../../components/Track';\r\nimport { get } from '../../utils/api';\r\nimport { FAVORITE_ARTIST } from '../../utils/constants';\r\nimport { Button } from '../../components/styles/Button.styled';\r\nimport BackgroundWrapper from '../../components/shared/BackgroundWrapper';\r\n\r\nconst SearchTracks = () => {\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [tracks, setTracks] = useState<Track[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst url = `method=track.search&artist=${FAVORITE_ARTIST}&track=${search}&format=json`;\r\n\r\n\tconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetSearch(e.target.value);\r\n\t};\r\n\r\n\tconst handleSearch = () => {\r\n\t\tgetTracks();\r\n\t};\r\n\r\n\tconst getTracks = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tget(url)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetTracks(res.results.trackmatches.track);\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\talert(\"Couldn't get albums for selected artist\");\r\n\t\t\t})\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t};\r\n\r\n\tconst LogoHeading = styled.h1`\r\n\t\tfont-size: 28px;\r\n\t\tfont-weight: 600;\r\n\t\tmargin: 22px 0;\r\n\t`;\r\n\r\n\tconst Input = styled.input`\r\n\t\tfont-size: 18px;\r\n\t\tpadding: 10px;\r\n\t\tmargin: 10px;\r\n\t\tborder: 1px solid ${({ theme }) => theme.colors.header};\r\n\t\tborder-radius: 60px;\r\n\t\t::placeholder {\r\n\t\t\tcolor: palevioletred;\r\n\t\t}\r\n\r\n\t\t&:focus {\r\n\t\t\toutline: red;\r\n\t\t}\r\n\t`;\r\n\r\n\treturn !isLoading ? (\r\n\t\t<BackgroundWrapper>\r\n\t\t\t<LogoHeading>Explore {FAVORITE_ARTIST} tracks:</LogoHeading>\r\n\t\t\t{/* value={search} onChange={handleChange} */}\r\n\t\t\t<Input type=\"text\" name=\"search\" />\r\n\t\t\t<Button type=\"button\" onClick={handleSearch}>\r\n\t\t\t\tSearch\r\n\t\t\t</Button>\r\n\t\t\t{tracks.map(track => (\r\n\t\t\t\t<SingleTrack key={track.name} track={track} />\r\n\t\t\t))}\r\n\t\t</BackgroundWrapper>\r\n\t) : (\r\n\t\t<BackgroundWrapper>Loading...</BackgroundWrapper>\r\n\t);\r\n};\r\n\r\nexport default SearchTracks;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { Track } from '../../models/models';\r\nimport { get } from '../../utils/api';\r\nimport SingleTrack from '../../components/Track';\r\nimport { FAVORITE_ARTIST } from '../../utils/constants';\r\nimport { BackgroundWrapper } from '../../components/shared/BackgroundWrapper';\r\n\r\nconst SingleAlbumView = () => {\r\n\tlet { name } = useParams();\r\n\tconst [tracks, setTracks] = useState<Track[]>([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst getSingleAlbumData = async () => {\r\n\t\tget(\r\n\t\t\t`method=album.getinfo&artist=${FAVORITE_ARTIST}&album=${name}&format=json`\r\n\t\t)\r\n\t\t\t.then(res => {\r\n\t\t\t\tsetTracks(res.album.tracks.track);\r\n\t\t\t})\r\n\t\t\t.catch(() => alert(\"Couldn't get albums for selected artist\"))\r\n\t\t\t.finally(() => setIsLoading(false));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetSingleAlbumData();\r\n\t}, []);\r\n\r\n\tconst LogoHeading = styled.h1`\r\n\t\tfont-size: 28px;\r\n\t\tfont-weight: 600;\r\n\t`;\r\n\tconst LogoHeadingSmall = styled.h3`\r\n\t\tfont-size: 20px;\r\n\t\ttext-decoration: underline;\r\n\t\tfont-weight: 600;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<BackgroundWrapper>\r\n\t\t\t<LogoHeading>Album: {name}</LogoHeading>\r\n\t\t\t<LogoHeadingSmall>Track list:</LogoHeadingSmall>\r\n\t\t\t{tracks.map(track => (\r\n\t\t\t\t<SingleTrack key={track.name} track={track} />\r\n\t\t\t))}\r\n\t\t</BackgroundWrapper>\r\n\t);\r\n};\r\n\r\nexport default SingleAlbumView;\r\n","import { Routes, Route } from 'react-router-dom';\nimport LayoutMain from './components/shared/LayoutMain';\nimport Home from './pages/Home';\nimport Liked from './pages/Liked';\nimport SearchTracks from './pages/SearchTracks';\nimport SingleAlbumView from './pages/SingleAlbumView';\nimport 'dotenv/config';\nimport './App.css';\n\nconst App = () => (\n\t<LayoutMain>\n\t\t<Routes>\n\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t<Route path=\"/album\">\n\t\t\t\t<Route path=\":name\" element={<SingleAlbumView />} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/liked\" element={<Liked />} />\n\t\t\t<Route path=\"/search\" element={<SearchTracks />} />\n\t\t</Routes>\n\t</LayoutMain>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { persistor, store } from './store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<PersistGate persistor={persistor} loading={null}>\n\t\t\t\t\t<App />\n\t\t\t\t</PersistGate>\n\t\t\t</Provider>\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}